includes:
    - vendor/phpstan/phpstan-webmozart-assert/extension.neon
    - vendor/phpstan/phpstan-phpunit/extension.neon
    - vendor/proget-hq/phpstan-phpspec/extension.neon

    - vendor/phpstan/phpstan-phpunit/rules.neon

parameters:
    reportUnmatchedIgnoredErrors: false
    specDir: 'spec/'
    ignoreErrors:
        # PHPStan integration
        - '/Call to an undefined method Prophecy\\Prophecy\\MethodProphecy::getRealPath\(\)/'

        # Symfony 3.4 support
        - '/Method Symfony\\Component\\HttpKernel\\KernelInterface::getBundle\(\) invoked with 2 parameters, 1 required/'
        - '/Method Symfony\\Component\\HttpKernel\\KernelInterface::getBundle\(\) invoked with 2 parameters, 0-1 required/'
        - '/Call to function method_exists\(\) with .Symfony\\\\Componentâ€¦. and .getRootNode. will always evaluate to false/'
        - '/Call to an undefined method Symfony\\Component\\Config\\Definition\\Builder\\TreeBuilder::getRootNode\(\)/'
        - '/Class Symfony\\Component\\Config\\Definition\\Builder\\TreeBuilder does not have a constructor and must be instantiated without any parameters/'

        # Symfony caveats
        - '/Parameter \#1 \$name of method Symfony\\Component\\Config\\FileLocatorInterface::locate\(\) expects string, Symfony\\Component\\Templating\\TemplateReferenceInterface given/'
        - '/Parameter \#1 \$translator of class Symfony\\Component\\Translation\\Formatter\\MessageFormatter constructor expects Symfony\\Contracts\\Translation\\TranslatorInterface|null, Symfony\\Component\\Translation\\MessageSelector given/'

        # Symfony passes TemplateReference object instead of a string
        - "/Casting to string something that\\'s already string./"
